diff --git a/bk_idk/middleware/driver/flash/flash_driver.c b/bk_idk/middleware/driver/flash/flash_driver.c
index c4fb5053..da3432f2 100644
--- a/bk_idk/middleware/driver/flash/flash_driver.c
+++ b/bk_idk/middleware/driver/flash/flash_driver.c
@@ -61,64 +61,35 @@ typedef struct {
 	}\
 } while(0)
 
+#define FLASH_CPU_MASTER		0
+#define FLASH_CPU_SLAVE1		1
+
 static const flash_config_t flash_config[] = {
 	/* flash_id, status_reg_size, flash_size,    line_mode,           cmp_post, protect_post, protect_mask, protect_all, protect_none, protect_half, unprotect_last_block. quad_en_post, quad_en_val, coutinuous_read_mode_bits_val, mode_sel*/
-	{0x1C7016,   1,               FLASH_SIZE_4M, FLASH_LINE_MODE_TWO, 0,        2,            0x1F,         0x1F,        0x00,         0x16,         0x01B,                0,            0,           0xA5,                          0x01}, //en_25qh32b
-	{0x1C7015,   1,               FLASH_SIZE_2M, FLASH_LINE_MODE_TWO, 0,        2,            0x1F,         0x1F,        0x00,         0x0d,         0x0d,                 0,            0,           0xA5,                          0x01}, //en_25qh16b
-	{0x0B4014,   2,               FLASH_SIZE_1M, FLASH_LINE_MODE_TWO, 14,       2,            0x1F,         0x1F,        0x00,         0x0C,         0x101,                9,            1,           0xA0,                          0x01}, //xtx_25f08b
-	{0x0B4015,   2,               FLASH_SIZE_2M, FLASH_LINE_MODE_TWO, 14,       2,            0x1F,         0x1F,        0x00,         0x0D,         0x101,                9,            1,           0xA0,                          0x01}, //xtx_25f16b
-#if CONFIG_FLASH_QUAD_ENABLE
+	{0x1C7016,   1,               FLASH_SIZE_4M, FLASH_LINE_MODE_FOUR, 0,        2,            0x1F,         0x1F,        0x00,         0x16,         0x01B,                0,            0,           0xA5,                          0x02}, //en_25qh32b
+	{0x1C7015,   1,               FLASH_SIZE_2M, FLASH_LINE_MODE_FOUR, 0,        2,            0x1F,         0x1F,        0x00,         0x0d,         0x0d,                 0,            0,           0xA5,                          0x02}, //en_25qh16b
+	{0x0B4014,   2,               FLASH_SIZE_1M, FLASH_LINE_MODE_FOUR, 14,       2,            0x1F,         0x1F,        0x00,         0x0C,         0x101,                9,            1,           0xA0,                          0x02}, //xtx_25f08b
+	{0x0B4015,   2,               FLASH_SIZE_2M, FLASH_LINE_MODE_FOUR, 14,       2,            0x1F,         0x1F,        0x00,         0x0D,         0x101,                9,            1,           0xA0,                          0x02}, //xtx_25f16b
 	{0x0B4016,   2,               FLASH_SIZE_4M, FLASH_LINE_MODE_FOUR, 14,      2,            0x1F,         0x1F,        0x00,         0x0E,         0x101,                9,           1,            0xA0,                          0x02}, //xtx_25f32b
-#else
-	{0x0B4016,   2,               FLASH_SIZE_4M, FLASH_LINE_MODE_TWO, 14,       2,            0x1F,         0x1F,        0x00,         0x0E,         0x101,                9,            1,           0xA0,                          0x01}, //xtx_25f32b
-#endif
-	{0x0B4017,   2,               FLASH_SIZE_8M, FLASH_LINE_MODE_TWO, 14,       2,            0x1F,         0x05,        0x00,         0x0E,         0x109,                9,            1,           0xA0,                          0x01}, //xtx_25f64b
-#if CONFIG_FLASH_QUAD_ENABLE
+	{0x0B4017,   2,               FLASH_SIZE_8M, FLASH_LINE_MODE_FOUR, 14,       2,            0x1F,         0x05,        0x00,         0x0E,         0x109,                9,            1,           0xA0,                          0x02}, //xtx_25f64b
 	{0x0B6017,   2,               FLASH_SIZE_8M, FLASH_LINE_MODE_FOUR,  0,	    2,            0x0F,         0x0F,        0x00,         0x0A,         0x00E,                9,            1,           0xA0,                          0x02}, //xt_25q64d
-#else
-	{0x0B6017,   1,               FLASH_SIZE_8M, FLASH_LINE_MODE_TWO,   0,      2,            0x0F,         0x0F,        0x00,         0x0A,         0x00E,                0,            0,           0xA0,                          0x01}, //xt_25q64d
-#endif
-#if CONFIG_FLASH_QUAD_ENABLE
 	{0x0B6018,   2,               FLASH_SIZE_16M, FLASH_LINE_MODE_FOUR,  0,	    2,            0x0F,         0x0F,        0x00,         0x0A,         0x00E,                9,            1,           0xA0,                          0x02}, //xt_25q128d
-#else
-	{0x0B6018,   1,               FLASH_SIZE_16M, FLASH_LINE_MODE_TWO,   0,     2,            0x0F,         0x0F,        0x00,         0x0A,         0x00E,                0,            0,           0xA0,                          0x01}, //xt_25q128d
-#endif
-	{0x0E4016,   2,               FLASH_SIZE_4M, FLASH_LINE_MODE_TWO, 14,       2,            0x1F,         0x1F,        0x00,         0x0E,         0x101,                9,            1,           0xA0,                          0x01}, //xtx_FT25H32
-	{0x1C4116,   1,               FLASH_SIZE_4M, FLASH_LINE_MODE_TWO, 0,        2,            0x1F,         0x1F,        0x00,         0x0E,         0x00E,                0,            0,           0xA0,                          0x01}, //en_25qe32a(not support 4 line)
-	{0x5E5018,   1,               FLASH_SIZE_16M, FLASH_LINE_MODE_TWO, 0, 	    2,            0x0F,         0x0F,        0x00,         0x0A,         0x00E,                0,            0,           0xA0,                          0x01}, //zb_25lq128c
-	{0xC84015,   2,               FLASH_SIZE_2M, FLASH_LINE_MODE_TWO, 14,       2,            0x1F,         0x1F,        0x00,         0x0D,         0x101,                9,            1,           0xA0,                          0x01}, //gd_25q16c
-	{0xC84017,   1,               FLASH_SIZE_8M, FLASH_LINE_MODE_TWO, 14,       2,            0x1F,         0x1F,        0x00,         0x0D,         0x101,                9,            1,           0xA0,                          0x01}, //gd_25q16c
-#if CONFIG_FLASH_QUAD_ENABLE
+	{0x0E4016,   2,               FLASH_SIZE_4M, FLASH_LINE_MODE_FOUR, 14,       2,            0x1F,         0x1F,        0x00,         0x0E,         0x101,                9,            1,           0xA0,                          0x02}, //xtx_FT25H32
+	{0x1C4116,   1,               FLASH_SIZE_4M, FLASH_LINE_MODE_FOUR, 0,        2,            0x1F,         0x1F,        0x00,         0x0E,         0x00E,                0,            0,           0xA0,                          0x02}, //en_25qe32a(not support 4 line)
+	{0x5E5018,   1,               FLASH_SIZE_16M, FLASH_LINE_MODE_FOUR, 0, 	    2,            0x0F,         0x0F,        0x00,         0x0A,         0x00E,                0,            0,           0xA0,                          0x02}, //zb_25lq128c
+	{0xC84015,   2,               FLASH_SIZE_2M, FLASH_LINE_MODE_FOUR, 14,       2,            0x1F,         0x1F,        0x00,         0x0D,         0x101,                9,            1,           0xA0,                          0x02}, //gd_25q16c
+	{0xC84017,   1,               FLASH_SIZE_8M, FLASH_LINE_MODE_FOUR, 14,       2,            0x1F,         0x1F,        0x00,         0x0D,         0x101,                9,            1,           0xA0,                          0x02}, //gd_25q16c
 	{0xC84016,   2,               FLASH_SIZE_4M, FLASH_LINE_MODE_FOUR, 14,      2,            0x1F,         0x1F,        0x00,         0x0E,         0x00E,                9,            1,           0xA0,                          0x02}, //gd_25q32c
-#else
-	{0xC84016,   1,               FLASH_SIZE_4M, FLASH_LINE_MODE_TWO, 0,        2,            0x1F,         0x1F,        0x00,         0x0E,         0x00E,                0,            0,           0xA0,                          0x01}, //gd_25q32c
-#endif
-#if CONFIG_FLASH_QUAD_ENABLE
 	{0xC86018,   2,               FLASH_SIZE_16M,FLASH_LINE_MODE_FOUR, 0,       2,            0x0F,         0x0F,        0x00,         0x0A,         0x00E,                9,            1,           0xA0,                          0x02}, //gd_25lq128e
-#else
-	{0xC86018,   1,               FLASH_SIZE_16M,FLASH_LINE_MODE_TWO,  0,       2,            0x0F,         0x0F,        0x00,         0x0A,         0x00E,                0,            0,           0xA0,                          0x01}, //gd_25lq128e
-#endif
-	{0xC86515,   2,               FLASH_SIZE_2M, FLASH_LINE_MODE_TWO, 14,       2,            0x1F,         0x1F,        0x00,         0x0D,         0x101,                9,            1,           0xA0,                          0x01}, //gd_25w16e
-#if CONFIG_FLASH_QUAD_ENABLE
+	{0xC86515,   2,               FLASH_SIZE_2M, FLASH_LINE_MODE_FOUR, 14,       2,            0x1F,         0x1F,        0x00,         0x0D,         0x101,                9,            1,           0xA0,                          0x02}, //gd_25w16e
 	{0xC86516,   2,               FLASH_SIZE_4M, FLASH_LINE_MODE_FOUR, 14,      2,            0x1F,         0x1F,        0x00,         0x0E,         0x00E,                9,            1,           0xA0,                          0x02}, //gd_25wq32e
-#else
-	{0xC86516,   1,               FLASH_SIZE_4M, FLASH_LINE_MODE_TWO, 0,        2,            0x1F,         0x1F,        0x00,         0x0E,         0x00E,                0,            0,           0xA0,                          0x01}, //gd_25wq32e
-#endif
-	{0xEF4016,   2,               FLASH_SIZE_4M, FLASH_LINE_MODE_TWO, 14,       2,            0x1F,         0x1F,        0x00,         0x00,         0x101,                9,            1,           0xA0,                          0x01}, //w_25q32(bfj)
-#if CONFIG_FLASH_QUAD_ENABLE
+	{0xEF4016,   2,               FLASH_SIZE_4M, FLASH_LINE_MODE_FOUR, 14,       2,            0x1F,         0x1F,        0x00,         0x00,         0x101,                9,            1,           0xA0,                          0x02}, //w_25q32(bfj)
 	{0x204118,	 2, 			  FLASH_SIZE_16M,FLASH_LINE_MODE_FOUR, 0,		2,			  0x0F, 		0x0F,		 0x00,		   0x0A,		 0x00E, 			   9,			 1, 		  0xA0, 						 0x02}, //xm_25qu128c
-#else
-	{0x204118,	 1, 			  FLASH_SIZE_16M,FLASH_LINE_MODE_TWO,  0,		2,			  0x0F, 		0x0F,		 0x00,		   0x0A,		 0x00E, 			   0,			 0, 		  0xA0, 						 0x01}, //xm_25qu128c
-#endif
-	{0x204016,   2,               FLASH_SIZE_4M, FLASH_LINE_MODE_TWO, 14,       2,            0x1F,         0x1F,        0x00,         0x0E,         0x101,                9,            1,           0xA0,                          0x01}, //xmc_25qh32b
-	{0xC22315,   1,               FLASH_SIZE_2M, FLASH_LINE_MODE_TWO, 0,        2,            0x0F,         0x0F,        0x00,         0x0A,         0x00E,                6,            1,           0xA5,                          0x01}, //mx_25v16b
-	{0xEB6015,   2,               FLASH_SIZE_2M, FLASH_LINE_MODE_TWO, 14,       2,            0x1F,         0x1F,        0x00,         0x0D,         0x101,                9,            1,           0xA0,                          0x01}, //zg_th25q16b
-#if CONFIG_FLASH_QUAD_ENABLE
+	{0x204016,   2,               FLASH_SIZE_4M, FLASH_LINE_MODE_FOUR, 14,       2,            0x1F,         0x1F,        0x00,         0x0E,         0x101,                9,            1,           0xA0,                          0x02}, //xmc_25qh32b
+	{0xC22315,   1,               FLASH_SIZE_2M, FLASH_LINE_MODE_FOUR, 0,        2,            0x0F,         0x0F,        0x00,         0x0A,         0x00E,                6,            1,           0xA5,                          0x02}, //mx_25v16b
+	{0xEB6015,   2,               FLASH_SIZE_2M, FLASH_LINE_MODE_FOUR, 14,       2,            0x1F,         0x1F,        0x00,         0x0D,         0x101,                9,            1,           0xA0,                          0x02}, //zg_th25q16b
 	{0xC86517,	 2, 			  FLASH_SIZE_8M, FLASH_LINE_MODE_FOUR, 14,		2,			  0x1F, 		0x1F,		 0x00,		   0x0E,		 0x00E, 			   9,			 1, 		  0xA0, 						 0x02}, //gd_25Q32E
-#else
-	{0xC86517,	 1, 			  FLASH_SIZE_8M, FLASH_LINE_MODE_TWO, 0,		2,			  0x1F, 		0x1F,		 0x00,		   0x0E,		 0x00E, 			   0,			 0, 		  0xA0, 						 0x01}, //gd_25Q32E
-#endif
-	{0x000000,   2,               FLASH_SIZE_4M, FLASH_LINE_MODE_TWO, 0,        2,            0x1F,         0x00,        0x00,         0x00,         0x000,                0,            0,           0x00,                          0x01}, //default
+	{0x000000,   2,               FLASH_SIZE_4M, FLASH_LINE_MODE_FOUR, 0,        2,            0x1F,         0x00,        0x00,         0x00,         0x000,                0,            0,           0x00,                          0x02}, //default
 };
 
 static flash_driver_t s_flash = {0};
@@ -810,7 +781,8 @@ void flash_avoid_flicker_set(bool flag){
 #if defined(CONFIG_SECURITY_OTA) && !defined(CONFIG_TFM_FWU)
 __attribute__((section(".iram")))
 #endif
-bk_err_t bk_flash_set_line_mode(flash_line_mode_t line_mode)
+
+static bk_err_t vote_flash_set_line_mode(flash_line_mode_t line_mode)
 {
 	flash_hal_clear_qwfr(&s_flash.hal);
 #if CONFIG_SOC_BK7236XX
@@ -827,6 +799,46 @@ bk_err_t bk_flash_set_line_mode(flash_line_mode_t line_mode)
 	}
 #if CONFIG_SOC_BK7236XX
 	sys_drv_set_sys2flsh_2wire(1);
+#endif
+
+	return BK_OK;
+
+}
+
+bk_err_t bk_flash_set_line_mode(flash_line_mode_t line_mode)
+{
+#if CONFIG_SYS_CPU1 && CONFIG_MAILBOX
+	if (!s_flash_is_init) {
+		return vote_flash_set_line_mode(line_mode);
+	} else {
+
+		FLASH_RETURN_ON_DRIVER_NOT_INIT();
+
+#define FLASH_USER_CPU		FLASH_CPU_SLAVE1
+
+		u32 send_line_mode = ((FLASH_USER_CPU) << 16) + (u32)line_mode;
+
+		uint32_t ret_line_mode = ipc_vote_flash_line_mode(send_line_mode);
+		uint32_t retry = 0;
+		uint32_t ret = BK_OK;
+		while(ret_line_mode != line_mode){
+			if(retry > 3){
+				FLASH_LOGE("%s retry 3 times fail\r\n", __func__);
+				ret = BK_FAIL;
+				break;
+			}
+
+			ret_line_mode = ipc_vote_flash_line_mode(send_line_mode);
+
+			retry++;
+		}
+
+		return ret;
+	}
+#else
+
+	return vote_flash_set_line_mode(line_mode);
+
 #endif
 	return BK_OK;
 }
diff --git a/bk_idk/middleware/driver/mailbox/mb_ipc_cmd.c b/bk_idk/middleware/driver/mailbox/mb_ipc_cmd.c
index ff9e510f..2e4064be 100755
--- a/bk_idk/middleware/driver/mailbox/mb_ipc_cmd.c
+++ b/bk_idk/middleware/driver/mailbox/mb_ipc_cmd.c
@@ -20,6 +20,7 @@
 #include <driver/mb_chnl_buff.h>
 #include "mb_ipc_cmd.h"
 #include "driver/dma.h"
+#include "driver/flash.h"
 
 #if CONFIG_CACHE_ENABLE
 #include "cache.h"
@@ -769,7 +770,33 @@ static u32 ipc_cmd_handler(ipc_chnl_cb_t *chnl_cb, mb_chnl_ack_t *ack_buf)
 			}
 			break;
 		#endif
+		case IPC_FLASH_VOTE_LINE_MODE:
+#if !CONFIG_SYS_CPU2
+			if(chnl_cb->cmd_len >= sizeof(u8))
+			{
+				u8    v_line_mode = *((u8 *)chnl_cb->cmd_buf);
+
+				ipc_rsp->rsp_data_len = sizeof(u32);
 
+				u32 * ret_line_mode = (u32 *)ipc_rsp->rsp_buff;
+
+				uint32_t ret = 0;
+				extern bk_err_t bk_flash_set_line_mode(flash_line_mode_t line_mode);
+				ret = bk_flash_set_line_mode(v_line_mode);
+				if(ret != BK_OK) {
+					*ret_line_mode = ret;
+				} else {
+					*ret_line_mode = v_line_mode;
+				}
+				result = ACK_STATE_COMPLETE;
+			}
+			else
+			{
+				ipc_rsp->rsp_data_len = 0;
+				result = ACK_STATE_FAIL;
+			}
+#endif
+			break;
 		default:
 			{
 				ipc_rsp->rsp_data_len = 0;
@@ -1154,6 +1181,21 @@ u32 ipc_send_dma_chnl_user(u8 chnl_id)
 
 	return user_id;
 }
+
+u32 ipc_vote_flash_line_mode(u32 v_line_mode)
+{
+	bk_err_t	ret_val = BK_FAIL;
+	u32 ret_line_mode = -1;
+
+	ret_val = ipc_send_cmd(&ipc_chnl_cb, IPC_FLASH_VOTE_LINE_MODE, \
+						(u8 *)&v_line_mode, sizeof(v_line_mode), (u8 *)&ret_line_mode, sizeof(ret_line_mode));
+
+	if(ret_val != BK_OK)
+		return (u32)(-1);
+
+	return ret_line_mode;
+}
+
 #endif
 
 #endif
diff --git a/bk_idk/middleware/driver/mailbox/mb_ipc_cmd.h b/bk_idk/middleware/driver/mailbox/mb_ipc_cmd.h
index 941d81f2..b6a250f8 100755
--- a/bk_idk/middleware/driver/mailbox/mb_ipc_cmd.h
+++ b/bk_idk/middleware/driver/mailbox/mb_ipc_cmd.h
@@ -41,6 +41,8 @@ enum
 	IPC_FREE_DMA_CHNL,                      /* Client -> Server  */
 	IPC_DMA_CHNL_USER,                      /* Client -> Server  */
 
+	IPC_FLASH_VOTE_LINE_MODE,               /* Client -> Server  */
+
 	IPC_CPU1_TRAP_HANDLE_BEGIN,             /* CPU1 -> CPU0  */
 	IPC_CPU1_TRAP_HANDLE_END,               /* CPU1 -> CPU0  */
 
@@ -79,6 +81,9 @@ bk_err_t ipc_send_res_release_cnt(u16 resource_id, u16 cpu_id, amp_res_req_cnt_t
 u8       ipc_send_alloc_dma_chnl(u32 user_id);
 bk_err_t ipc_send_free_dma_chnl(u32 user_id, u8 chnl_id);
 u32      ipc_send_dma_chnl_user(u8 chnl_id);
+
+u32 ipc_vote_flash_line_mode(u32 v_line_mode);
+
 #endif
 
 #else  /* (CONFIG_CPU_CNT > 1) */
